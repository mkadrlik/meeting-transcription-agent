services:
  # Meeting Transcription MCP Server
  meeting-transcription:
    image: ghcr.io/mkadrlik/meeting-transcription-agent:latest
    container_name: meeting-transcription-agent
    # Uncomment below to build locally instead of using GHCR image
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    environment:
      # Fix Whisper cache permissions - use app directory instead of root
      - HF_HOME=/app/.cache
      - TRANSFORMERS_CACHE=/app/.cache
      - WHISPER_CACHE_DIR=/app/.cache/whisper
      - HOME=/app
      
      # Disable direct audio device access (use client bridge instead)  
      - DISABLE_AUDIO_CAPTURE=true
      - CLIENT_AUDIO_FORWARDING_ONLY=true
      
      # Local Whisper configuration
      - WHISPER_MODEL_SIZE=${WHISPER_MODEL_SIZE:-base}
      
      # Ollama post-processing configuration
      - OLLAMA_URL=${OLLAMA_URL:-http://192.168.50.15:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-gemma3-4b}
      
      # Audio settings (for client bridge mode only)
      - DEFAULT_SAMPLE_RATE=16000
      - DEFAULT_CHANNELS=1
      - DEFAULT_CHUNK_DURATION=30
      
      # Server settings
      - MAX_CONCURRENT_SESSIONS=5
      - SESSION_TIMEOUT=3600
      - DEFAULT_TRANSCRIPTION_PROVIDER=whisper_local
      - TRANSCRIPTION_CONFIDENCE_THRESHOLD=0.5
      
      # Logging
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/transcription.log
      
      # MCP Gateway connection (external)
      - MCP_GATEWAY_URL=${MCP_GATEWAY_URL:-http://192.168.50.20:8811}
    volumes:
      # Mount logs directory
      - /DATA/san-raid5/AppData/meeting-transcription-agent/logs:/app/logs
      # Mount data directory for session storage
      - /DATA/san-raid5/AppData/meeting-transcription-agent/data:/app/data
      # Mount cache directory for Whisper models (writable)
      - /DATA/san-raid5/AppData/meeting-transcription-agent/cache:/app/cache
    user: "1000:1000"  # Standard user without audio group
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Use host networking to connect to external MCP Gateway
    network_mode: "bridge"
    extra_hosts:
      - "host.docker.internal:host-gateway"